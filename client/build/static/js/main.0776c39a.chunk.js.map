{"version":3,"sources":["auth/auth-request-api/index.js","auth/index.js","components/AppBanner.js","components/HomeScreen.js","components/SplashScreen.js","components/HomeWrapper.js","components/Copyright.js","components/MUILoginErrorModal.js","components/LoginScreen.js","components/MUIRegisterErrorModal.js","components/RegisterScreen.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","api","create","baseURL","apis","getLoggedIn","get","registerUser","firstName","lastName","email","password","passwordVerify","post","loginUser","logoutUser","AuthContext","createContext","console","log","AuthActionType","GET_LOGGED_IN","LOGIN_USER","LOGOUT_USER","REGISTER_USER","LOGIN_USER_ERROR","REGISTER_USER_ERROR","CurrentModal","AuthContextProvider","props","useState","currentModal","user","loggedIn","message","auth","setAuth","history","useHistory","useEffect","authReducer","action","type","payload","errorMessage","HIDE_MODALS","response","status","SET_LOGGED_IN","data","push","getUserInitials","initials","charAt","isLoginModalOpen","isRegisterModalOpen","hideModals","Provider","value","children","AppBanner","useContext","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleMenuClose","menuId","loggedOutMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","to","loggedInMenu","menu","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","noWrap","component","display","xs","sm","style","textDecoration","color","md","IconButton","size","edge","event","currentTarget","userInitials","getAccountMenu","HomeScreen","SplashScreen","HomeWrapper","Copyright","align","Link","href","Date","getFullYear","MUILoginErrorModal","Modal","top","left","transform","width","bgcolor","border","boxShadow","p","Alert","severity","AlertTitle","LoginScreen","modalJSX","Grid","container","height","CssBaseline","item","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","flexDirection","alignItems","Avatar","m","noValidate","onSubmit","preventDefault","formData","FormData","mt","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","mb","MUIRegisterErrorModal","RegisterScreen","Container","maxWidth","marginTop","spacing","justifyContent","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0776c39a.chunk.js","sourcesContent":["/*\n    This is our http api for all things auth, which we use to \n    send authorization requests to our back-end API. Note we`re \n    using the Axios library for doing this, which is an easy to \n    use AJAX-based library. We could (and maybe should) use Fetch, \n    which is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it`s a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\naxios.defaults.withCredentials = true;\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/auth',\n})\n\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /register). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\nexport const loginUser = (email, password) => {\n    return api.post(`/login/`, {\n        email : email,\n        password : password\n    })\n}\nexport const logoutUser = () => api.get(`/logout/`)\nexport const registerUser = (firstName, lastName, email, password, passwordVerify) => {\n    return api.post(`/register/`, {\n        firstName : firstName,\n        lastName : lastName,\n        email : email,\n        password : password,\n        passwordVerify : passwordVerify\n    })\n}\nconst apis = {\n    getLoggedIn,\n    registerUser,\n    loginUser,\n    logoutUser\n}\n\nexport default apis\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport api from './auth-request-api';\nimport Alert from '@mui/material/Alert'\n\nconst AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    LOGIN_USER: \"LOGIN_USER\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\n    REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\"\n}\n\nconst CurrentModal = {\n    NONE : \"NONE\",\n    LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\n    REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\"\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        currentModal : CurrentModal.NONE,\n        user: null,\n        loggedIn: false,\n        message: null\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn\n                });\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGOUT_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: false\n                })\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true\n                })\n            }\n            case AuthActionType.LOGIN_USER_ERROR: {\n                return setAuth({\n                    currentModal : CurrentModal.LOGIN_USER_ERROR,\n                    user: null,\n                    loggedIn: false,\n                    message: payload.errorMessage\n                })\n            }\n\n            case AuthActionType.REGISTER_USER_ERROR: {\n                return setAuth({\n                    currentModal : CurrentModal.REGISTER_USER_ERROR,\n                    user: null,\n                    loggedIn: false,\n                    message: payload.errorMessage\n                })\n            }\n\n            case AuthActionType.HIDE_MODALS: {\n                return setAuth({\n                    currentModal : CurrentModal.NONE,\n                    user: null,\n                    loggedIn: false\n                });\n            }\n\n            default:\n                return auth;\n        }\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.SET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n        }\n    }\n\n    auth.registerUser = async function(firstName, lastName, email, password, passwordVerify) {\n        try {\n            const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);      \n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.REGISTER_USER,\n                payload: {\n                    user: response.data.user\n                }\n            })\n            history.push(\"/\");\n        } \n        } catch (error) {\n            const message = error.response.data.errorMessage;\n            console.log (message);\n            authReducer({\n                type: AuthActionType.REGISTER_USER_ERROR,\n                payload: {\n                    errorMessage: message\n                }\n            })\n        }\n    }\n\n    auth.loginUser = async function(email, password) {\n        try {\n           const response = await api.loginUser(email, password);\n           if (response.status === 200) {\n               authReducer({\n                   type: AuthActionType.LOGIN_USER,\n                   payload: {\n                       user: response.data.user\n                   }\n               })\n               history.push(\"/\");\n           } \n        } catch (error) {\n            const message = error.response.data.errorMessage;\n            console.log (message);\n            authReducer({\n                type: AuthActionType.LOGIN_USER_ERROR,\n                payload: {\n                    errorMessage: message\n                }\n            })\n        }\n    }\n\n    auth.logoutUser = async function() {\n        const response = await api.logoutUser();\n        if (response.status === 200) {\n            authReducer( {\n                type: AuthActionType.LOGOUT_USER,\n                payload: null\n            })\n            history.push(\"/\");\n        }\n    }\n\n    auth.getUserInitials = function() {\n        let initials = \"\";\n        if (auth.user) {\n            initials += auth.user.firstName.charAt(0);\n            initials += auth.user.lastName.charAt(0);\n        }\n        console.log(\"user initials: \" + initials);\n        return initials;\n    }\n\n    auth.isLoginModalOpen = () => {\n        return auth.currentModal === CurrentModal.LOGIN_USER_ERROR;\n    }\n\n    auth.isRegisterModalOpen = () => {\n        return auth.currentModal === CurrentModal.REGISTER_USER_ERROR;\n    }\n\n    auth.hideModals = () => {\n        authReducer({\n            type: AuthActionType.HIDE_MODALS,\n            payload: {}\n        });    \n    }\n\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };","import { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../auth';\n//import { GlobalStoreContext } from '../store'\n\nimport Menu from '@mui/material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\n\nexport default function AppBanner() {\n    const { auth } = useContext(AuthContext);\n    \n    const [anchorEl, setAnchorEl] = useState(null);\n    const isMenuOpen = Boolean(anchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        handleMenuClose();\n        auth.logoutUser();\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const loggedOutMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}><Link to='/login/'>Login</Link></MenuItem>\n            <MenuItem onClick={handleMenuClose}><Link to='/register/'>Create New Account</Link></MenuItem>\n        </Menu>\n    );\n    const loggedInMenu = \n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>        \n\n\n    let menu = loggedOutMenu;\n    if (auth.loggedIn) {\n        menu = loggedInMenu;\n    }\n\n    function getAccountMenu(loggedIn) {\n        let userInitials = auth.getUserInitials();\n        console.log(\"userInitials: \" + userInitials);\n        if (loggedIn) \n            return <div>{userInitials}</div>;\n        else\n            return <AccountCircle />;\n    }\n\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography                        \n                        variant=\"h4\"\n                        noWrap\n                        component=\"div\"\n                        sx={{ display: { xs: 'none', sm: 'block' } }}                        \n                    >\n                        <Link style={{ textDecoration: 'none', color: 'white' }} to='/'>⌂</Link>\n                    </Typography>\n                   \n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                           \n                        >\n                            { getAccountMenu(auth.loggedIn) }\n                        </IconButton>\n                    </Box>\n                </Toolbar>\n            </AppBar>\n            {\n             menu\n            }\n        </Box>\n    );\n}","import React, { useContext, useEffect } from 'react'\n//import { GlobalStoreContext } from '../store'\n\nimport AppBanner from './AppBanner';\n/*\n    This React component lists all the top5 lists in the UI.\n    \n    @author McKilla Gorilla\n*/\nconst HomeScreen = () => {\n    //const { store } = useContext(GlobalStoreContext);\n    let appBanner = <AppBanner />\n\n    \n    return (\n        <div >\n        </div>)\n}\n\nexport default HomeScreen;","export default function SplashScreen() {\n    return (\n        <div id=\"splash-screen\">\n            MapCraft\n        </div>\n    )\n}","import { useContext } from 'react'\nimport HomeScreen from './HomeScreen'\nimport SplashScreen from './SplashScreen'\nimport AuthContext from '../auth'\n\nexport default function HomeWrapper() {\n    const { auth } = useContext(AuthContext);\n    console.log(\"HomeWrapper auth.loggedIn: \" + auth.loggedIn);\n    \n    if (auth.loggedIn)\n        return <HomeScreen />\n    else\n        return <SplashScreen />\n}","import Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n\nexport default function Copyright(props) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"/\">\n                Playlister\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}","import { useContext } from 'react';\nimport AuthContext from '../auth';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Alert from '@mui/material/Alert'\nimport { AlertTitle, Button } from '@mui/material';\n\nexport default function MUILoginErrorModal() {\n    const { auth } = useContext(AuthContext);\n    const message = auth.message\n    function handleCloseModal(event) {\n        auth.hideModals();\n    }\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n    return (\n        <Modal\n            open={auth.user === null}\n        >\n            <Box sx={style}>\n            <Alert severity=\"warning\">\n            <AlertTitle>Warning</AlertTitle>\n                 {message}\n            <button\n                onClick={handleCloseModal}\n            >CLOSE</button>\n                        \n            </Alert>\n            </Box>\n        </Modal>\n    );\n}","import { useContext } from 'react';\nimport AuthContext from '../auth'\n\nimport Copyright from './Copyright'\n\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport MUILoginErrorModal from './MUILoginErrorModal';\n\nexport default function LoginScreen() {\n    const { auth } = useContext(AuthContext);\n\n    let modalJSX = \"\";\n    if (auth.isLoginModalOpen()) {\n        modalJSX = <MUILoginErrorModal />;\n    }\n\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const formData = new FormData(event.currentTarget);\n        auth.loginUser(\n            formData.get('email'),\n            formData.get('password')\n        );\n\n    };\n\n    return (\n        <Grid container component=\"main\" sx={{ height: '100vh' }}>\n            <CssBaseline />\n            <Grid\n                item\n                xs={false}\n                sm={4}\n                md={7}\n                sx={{\n                    backgroundImage: 'url(https://source.unsplash.com/random)',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundColor: (t) =>\n                        t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                }}\n            />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <Box\n                    sx={{\n                        my: 8,\n                        mx: 4,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n                                <Link href=\"#\" variant=\"body2\">\n                                    Forgot password?\n                                </Link>\n                            </Grid>\n                            <Grid item>\n                                <Link href=\"#\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Copyright sx={{ mt: 5 }} />\n                    </Box>\n                </Box>\n            </Grid>\n            { modalJSX }\n        </Grid>\n    );\n}","import { useContext } from 'react';\nimport AuthContext from '../auth';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport Alert from '@mui/material/Alert'\nimport { AlertTitle, Button } from '@mui/material';\n\nexport default function MUIRegisterErrorModal() {\n    const { auth } = useContext(AuthContext);\n    const message = auth.message\n    function handleCloseModal(event) {\n        auth.hideModals();\n    }\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n    return (\n        <Modal\n            open={auth.user === null}\n        >\n            <Box sx={style}>\n            <Alert severity=\"warning\">\n            <AlertTitle>Warning</AlertTitle>\n                 {message}\n            <button\n                onClick={handleCloseModal}\n            >CLOSE</button>\n                        \n            </Alert>\n            </Box>\n        </Modal>\n    );\n}","import { useContext } from 'react';\nimport AuthContext from '../auth'\nimport Copyright from './Copyright'\n\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport MUIRegisterErrorModal from './MUIRegisterErrorModal';\n\nexport default function RegisterScreen() {\n    const { auth } = useContext(AuthContext);\n\n    let modalJSX = \"\";\n    if (auth.isRegisterModalOpen()) {\n        modalJSX = <MUIRegisterErrorModal />;\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const formData = new FormData(event.currentTarget);\n        auth.registerUser(\n            formData.get('firstName'),\n            formData.get('lastName'),\n            formData.get('email'),\n            formData.get('password'),\n            formData.get('passwordVerify')\n        );\n    };\n\n    return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    fullWidth\n                                    name=\"passwordVerify\"\n                                    label=\"Password Verify\"\n                                    type=\"password\"\n                                    id=\"passwordVerify\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login/\" variant=\"body2\">\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n                <Copyright sx={{ mt: 5 }} />\n                { modalJSX }\n            </Container>\n    );\n}","import './App.css';\nimport { React, useContext } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { AuthContextProvider } from './auth';\n//import { GlobalStoreContextProvider } from './store'\nimport {\n    AppBanner,\n    HomeWrapper,\n    LoginScreen,\n    RegisterScreen\n} from './components'\n/*\n    This is our application's top-level component.\n    \n    @author McKilla Gorilla\n*/\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\nconst App = () => {   \n\n    return (\n        <BrowserRouter>\n            <AuthContextProvider>\n                           \n                    <AppBanner />\n                    <Switch>\n                        <Route path=\"/\" exact component={HomeWrapper} />\n                        <Route path=\"/login/\" exact component={LoginScreen} />\n                        <Route path=\"/register/\" exact component={RegisterScreen} />\n                        \n                    </Switch>\n                    \n               \n            </AuthContextProvider>\n        </BrowserRouter>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n/*\n  This is the entry-point for our application. Notice that we\n  inject our store into all the components in our application.\n  \n  @author McKilla Gorilla\n*/\n\nReactDOM.render(\n  <React.StrictMode>  \n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}