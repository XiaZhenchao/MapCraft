{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haosh\\\\Desktop\\\\MapCraft\\\\client\\\\src\\\\auth\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport api from './auth-request-api';\nimport Alert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  LOGIN_USER: \"LOGIN_USER\",\n  LOGOUT_USER: \"LOGOUT_USER\",\n  REGISTER_USER: \"REGISTER_USER\",\n  LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\n  REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\"\n};\nconst CurrentModal = {\n  NONE: \"NONE\",\n  LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\n  REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\"\n};\nfunction AuthContextProvider(props) {\n  _s();\n  const [auth, setAuth] = useState({\n    currentModal: CurrentModal.NONE,\n    user: null,\n    loggedIn: false,\n    message: null\n  });\n  const history = useHistory();\n  useEffect(() => {\n    auth.getLoggedIn();\n  }, []);\n  const authReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn\n          });\n        }\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true\n          });\n        }\n      case AuthActionType.LOGOUT_USER:\n        {\n          return setAuth({\n            user: null,\n            loggedIn: false\n          });\n        }\n      case AuthActionType.REGISTER_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true\n          });\n        }\n      case AuthActionType.LOGIN_USER_ERROR:\n        {\n          return setAuth({\n            currentModal: CurrentModal.LOGIN_USER_ERROR,\n            user: null,\n            loggedIn: false,\n            message: payload.errorMessage\n          });\n        }\n      case AuthActionType.REGISTER_USER_ERROR:\n        {\n          return setAuth({\n            currentModal: CurrentModal.REGISTER_USER_ERROR,\n            user: null,\n            loggedIn: false,\n            message: payload.errorMessage\n          });\n        }\n      case AuthActionType.HIDE_MODALS:\n        {\n          return setAuth({\n            currentModal: CurrentModal.NONE,\n            user: null,\n            loggedIn: false\n          });\n        }\n      default:\n        return auth;\n    }\n  };\n  auth.getLoggedIn = async function () {\n    const response = await api.getLoggedIn();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.SET_LOGGED_IN,\n        payload: {\n          loggedIn: response.data.loggedIn,\n          user: response.data.user\n        }\n      });\n    }\n  };\n  auth.registerUser = async function (firstName, lastName, email, password, passwordVerify) {\n    try {\n      const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.REGISTER_USER,\n          payload: {\n            user: response.data.user\n          }\n        });\n        history.push(\"/\");\n      }\n    } catch (error) {\n      const message = error.response.data.errorMessage;\n      console.log(message);\n      authReducer({\n        type: AuthActionType.REGISTER_USER_ERROR,\n        payload: {\n          errorMessage: message\n        }\n      });\n    }\n  };\n  auth.loginUser = async function (email, password) {\n    try {\n      const response = await api.loginUser(email, password);\n      if (response.status === 200) {\n        authReducer({\n          type: AuthActionType.LOGIN_USER,\n          payload: {\n            user: response.data.user\n          }\n        });\n        history.push(\"/\");\n      }\n    } catch (error) {\n      const message = error.response.data.errorMessage;\n      console.log(message);\n      authReducer({\n        type: AuthActionType.LOGIN_USER_ERROR,\n        payload: {\n          errorMessage: message\n        }\n      });\n    }\n  };\n  auth.logoutUser = async function () {\n    const response = await api.logoutUser();\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGOUT_USER,\n        payload: null\n      });\n      history.push(\"/\");\n    }\n  };\n  auth.getUserInitials = function () {\n    let initials = \"\";\n    if (auth.user) {\n      initials += auth.user.firstName.charAt(0);\n      initials += auth.user.lastName.charAt(0);\n    }\n    console.log(\"user initials: \" + initials);\n    return initials;\n  };\n  auth.isLoginModalOpen = () => {\n    return auth.currentModal === CurrentModal.LOGIN_USER_ERROR;\n  };\n  auth.isRegisterModalOpen = () => {\n    return auth.currentModal === CurrentModal.REGISTER_USER_ERROR;\n  };\n  auth.hideModals = () => {\n    authReducer({\n      type: AuthActionType.HIDE_MODALS,\n      payload: {}\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n_s(AuthContextProvider, \"2a+hwQA1gHnkDWguPkYUig8PgXM=\", false, function () {\n  return [useHistory];\n});\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useHistory","api","Alert","AuthContext","console","log","AuthActionType","GET_LOGGED_IN","LOGIN_USER","LOGOUT_USER","REGISTER_USER","LOGIN_USER_ERROR","REGISTER_USER_ERROR","CurrentModal","NONE","AuthContextProvider","props","auth","setAuth","currentModal","user","loggedIn","message","history","getLoggedIn","authReducer","action","type","payload","errorMessage","HIDE_MODALS","response","status","SET_LOGGED_IN","data","registerUser","firstName","lastName","email","password","passwordVerify","push","error","loginUser","logoutUser","getUserInitials","initials","charAt","isLoginModalOpen","isRegisterModalOpen","hideModals","children"],"sources":["C:/Users/haosh/Desktop/MapCraft/client/src/auth/index.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from './auth-request-api';\r\nimport Alert from '@mui/material/Alert'\r\n\r\nconst AuthContext = createContext();\r\nconsole.log(\"create AuthContext: \" + AuthContext);\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\r\nexport const AuthActionType = {\r\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\r\n    LOGIN_USER: \"LOGIN_USER\",\r\n    LOGOUT_USER: \"LOGOUT_USER\",\r\n    REGISTER_USER: \"REGISTER_USER\",\r\n    LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\r\n    REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\"\r\n}\r\n\r\nconst CurrentModal = {\r\n    NONE : \"NONE\",\r\n    LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\r\n    REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\"\r\n}\r\n\r\nfunction AuthContextProvider(props) {\r\n    const [auth, setAuth] = useState({\r\n        currentModal : CurrentModal.NONE,\r\n        user: null,\r\n        loggedIn: false,\r\n        message: null\r\n    });\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth.getLoggedIn();\r\n    }, []);\r\n\r\n    const authReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            case AuthActionType.GET_LOGGED_IN: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: payload.loggedIn\r\n                });\r\n            }\r\n            case AuthActionType.LOGIN_USER: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true\r\n                })\r\n            }\r\n            case AuthActionType.LOGOUT_USER: {\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: false\r\n                })\r\n            }\r\n            case AuthActionType.REGISTER_USER: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true\r\n                })\r\n            }\r\n            case AuthActionType.LOGIN_USER_ERROR: {\r\n                return setAuth({\r\n                    currentModal : CurrentModal.LOGIN_USER_ERROR,\r\n                    user: null,\r\n                    loggedIn: false,\r\n                    message: payload.errorMessage\r\n                })\r\n            }\r\n\r\n            case AuthActionType.REGISTER_USER_ERROR: {\r\n                return setAuth({\r\n                    currentModal : CurrentModal.REGISTER_USER_ERROR,\r\n                    user: null,\r\n                    loggedIn: false,\r\n                    message: payload.errorMessage\r\n                })\r\n            }\r\n\r\n            case AuthActionType.HIDE_MODALS: {\r\n                return setAuth({\r\n                    currentModal : CurrentModal.NONE,\r\n                    user: null,\r\n                    loggedIn: false\r\n                });\r\n            }\r\n\r\n            default:\r\n                return auth;\r\n        }\r\n    }\r\n\r\n    auth.getLoggedIn = async function () {\r\n        const response = await api.getLoggedIn();\r\n        if (response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.SET_LOGGED_IN,\r\n                payload: {\r\n                    loggedIn: response.data.loggedIn,\r\n                    user: response.data.user\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    auth.registerUser = async function(firstName, lastName, email, password, passwordVerify) {\r\n        try {\r\n            const response = await api.registerUser(firstName, lastName, email, password, passwordVerify);      \r\n        if (response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.REGISTER_USER,\r\n                payload: {\r\n                    user: response.data.user\r\n                }\r\n            })\r\n            history.push(\"/\");\r\n        } \r\n        } catch (error) {\r\n            const message = error.response.data.errorMessage;\r\n            console.log (message);\r\n            authReducer({\r\n                type: AuthActionType.REGISTER_USER_ERROR,\r\n                payload: {\r\n                    errorMessage: message\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    auth.loginUser = async function(email, password) {\r\n        try {\r\n           const response = await api.loginUser(email, password);\r\n           if (response.status === 200) {\r\n               authReducer({\r\n                   type: AuthActionType.LOGIN_USER,\r\n                   payload: {\r\n                       user: response.data.user\r\n                   }\r\n               })\r\n               history.push(\"/\");\r\n           } \r\n        } catch (error) {\r\n            const message = error.response.data.errorMessage;\r\n            console.log (message);\r\n            authReducer({\r\n                type: AuthActionType.LOGIN_USER_ERROR,\r\n                payload: {\r\n                    errorMessage: message\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    auth.logoutUser = async function() {\r\n        const response = await api.logoutUser();\r\n        if (response.status === 200) {\r\n            authReducer( {\r\n                type: AuthActionType.LOGOUT_USER,\r\n                payload: null\r\n            })\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    auth.getUserInitials = function() {\r\n        let initials = \"\";\r\n        if (auth.user) {\r\n            initials += auth.user.firstName.charAt(0);\r\n            initials += auth.user.lastName.charAt(0);\r\n        }\r\n        console.log(\"user initials: \" + initials);\r\n        return initials;\r\n    }\r\n\r\n    auth.isLoginModalOpen = () => {\r\n        return auth.currentModal === CurrentModal.LOGIN_USER_ERROR;\r\n    }\r\n\r\n    auth.isRegisterModalOpen = () => {\r\n        return auth.currentModal === CurrentModal.REGISTER_USER_ERROR;\r\n    }\r\n\r\n    auth.hideModals = () => {\r\n        authReducer({\r\n            type: AuthActionType.HIDE_MODALS,\r\n            payload: {}\r\n        });    \r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module"}