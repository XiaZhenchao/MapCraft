{"ast":null,"code":"/*\r\n    This is our http api for all things auth, which we use to \r\n    send authorization requests to our back-end API. Note we`re \r\n    using the Axios library for doing this, which is an easy to \r\n    use AJAX-based library. We could (and maybe should) use Fetch, \r\n    which is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/auth'\n});\n\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /register). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\nexport const loginUser = (email, password) => {\n  return api.post(`/login/`, {\n    email: email,\n    password: password\n  });\n};\nexport const logoutUser = () => api.get(`/logout/`);\nexport const registerUser = (firstName, lastName, email, password, passwordVerify) => {\n  return api.post(`/register/`, {\n    firstName: firstName,\n    lastName: lastName,\n    email: email,\n    password: password,\n    passwordVerify: passwordVerify\n  });\n};\nconst apis = {\n  getLoggedIn,\n  registerUser,\n  loginUser,\n  logoutUser\n};\nexport default apis;","map":{"version":3,"names":["axios","defaults","withCredentials","api","create","baseURL","getLoggedIn","get","loginUser","email","password","post","logoutUser","registerUser","firstName","lastName","passwordVerify","apis"],"sources":["C:/Users/haosh/Desktop/MapCraft/client/src/auth/auth-request-api/index.js"],"sourcesContent":["/*\r\n    This is our http api for all things auth, which we use to \r\n    send authorization requests to our back-end API. Note we`re \r\n    using the Axios library for doing this, which is an easy to \r\n    use AJAX-based library. We could (and maybe should) use Fetch, \r\n    which is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:4000/auth',\r\n})\r\n\r\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\r\n// REQUEST METHOD (like get) AND PATH (like /register). SOME ALSO\r\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\r\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\r\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\r\n// CUSTOM FILTERS FOR QUERIES\r\n\r\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\r\nexport const loginUser = (email, password) => {\r\n    return api.post(`/login/`, {\r\n        email : email,\r\n        password : password\r\n    })\r\n}\r\nexport const logoutUser = () => api.get(`/logout/`)\r\nexport const registerUser = (firstName, lastName, email, password, passwordVerify) => {\r\n    return api.post(`/register/`, {\r\n        firstName : firstName,\r\n        lastName : lastName,\r\n        email : email,\r\n        password : password,\r\n        passwordVerify : passwordVerify\r\n    })\r\n}\r\nconst apis = {\r\n    getLoggedIn,\r\n    registerUser,\r\n    loginUser,\r\n    logoutUser\r\n}\r\n\r\nexport default apis\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,GAAG,IAAI;AACrC,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAE,YAAW,CAAC;AACtD,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC1C,OAAOP,GAAG,CAACQ,IAAI,CAAE,SAAQ,EAAE;IACvBF,KAAK,EAAGA,KAAK;IACbC,QAAQ,EAAGA;EACf,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAME,UAAU,GAAG,MAAMT,GAAG,CAACI,GAAG,CAAE,UAAS,CAAC;AACnD,OAAO,MAAMM,YAAY,GAAG,CAACC,SAAS,EAAEC,QAAQ,EAAEN,KAAK,EAAEC,QAAQ,EAAEM,cAAc,KAAK;EAClF,OAAOb,GAAG,CAACQ,IAAI,CAAE,YAAW,EAAE;IAC1BG,SAAS,EAAGA,SAAS;IACrBC,QAAQ,EAAGA,QAAQ;IACnBN,KAAK,EAAGA,KAAK;IACbC,QAAQ,EAAGA,QAAQ;IACnBM,cAAc,EAAGA;EACrB,CAAC,CAAC;AACN,CAAC;AACD,MAAMC,IAAI,GAAG;EACTX,WAAW;EACXO,YAAY;EACZL,SAAS;EACTI;AACJ,CAAC;AAED,eAAeK,IAAI"},"metadata":{},"sourceType":"module"}